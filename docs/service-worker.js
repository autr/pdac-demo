!function(){"use strict";const e=1737077182409,t=`cache${e}`,n=["client/Refresh.f4f3dfc7.js","client/connect.74e2f27b.js","client/list.ca5b75ba.js","client/index.07ced1c3.js","client/index.aebbdd09.js","client/index.ba15ccbf.js","client/GroupBlock.a43b0ae2.js","client/AudioLevels.1c1ca29d.js","client/Keyboard.0b9cb795.js","client/complete.0f210a45.js","client/index.5d170413.js","client/preview.5e08d65c.js","client/index.b63c5fb4.js","client/Play.ad3f56d5.js","client/sessions.728c8be2.js","client/website.400d3826.js","client/BooleanToggle.ac259fd7.js","client/Watch.842e9003.js","client/WebCam.cedaa4d4.js","client/PaletteOutline.0f7191ad.js","client/hostname.b51c4c2c.js","client/IndexDropdown.c6737132.js","client/index.b0951d9c.js","client/miband.808d48f5.js","client/preview.e6c11dee.js","client/color.6b83e920.js","client/_idx_.eb8985b1.js","client/dhcp.ddcfe58f.js","client/index.7051365c.js","client/index.3f92c291.js","client/stage.191ba02c.js","client/client.a899bf57.js"].concat(["service-worker-index.html",".DS_Store","favicon.png","fonts/helvetica-webfont.eot","fonts/helvetica-webfont.ttf","fonts/helvetica-webfont.woff","fonts/slkscr.ttf","fonts/slkscrb.ttf","fonts/slkscre.ttf","fonts/slkscreb.ttf","fonts/uni0553-webfont.eot","fonts/uni0553-webfont.ttf","fonts/uni0553-webfont.woff","global.css","logo-192.png","logo-512.png","manifest.json","silhouette.svg","spinner.svg","successkid.jpg"]),s=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==t&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const n=new URL(t.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&s.has(n.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open(`offline${e}`).then((async e=>{try{const n=await fetch(t.request);return e.put(t.request,n.clone()),n}catch(n){const s=await e.match(t.request);if(s)return s;throw n}})))))}))}();
