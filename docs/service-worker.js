!function(){"use strict";const e=1737076425524,t=`cache${e}`,n=["client/Refresh.29b02941.js","client/connect.0a86697d.js","client/index.68bd7fba.js","client/list.e8d721b1.js","client/index.60cdd0d7.js","client/GroupBlock.ce09dbd0.js","client/index.74f38f50.js","client/index.37e83122.js","client/sessions.728c8be2.js","client/complete.69916c3e.js","client/preview.8eef55ac.js","client/index.9759fa24.js","client/Play.e3422a4e.js","client/Keyboard.e6433a94.js","client/AudioLevels.98b75373.js","client/website.539a92a1.js","client/BooleanToggle.2c111130.js","client/WebCam.ec17a714.js","client/Watch.300f8277.js","client/PaletteOutline.c6107b1f.js","client/hostname.7f39de54.js","client/IndexDropdown.6d091dc6.js","client/preview.939d4065.js","client/index.fe53b7f0.js","client/miband.401147f9.js","client/dhcp.1f984f16.js","client/color.f155ad72.js","client/index.445821ae.js","client/_idx_.3fd6d4c3.js","client/index.d0ce58c6.js","client/stage.5b1d091b.js","client/client.ed447a6d.js"].concat(["service-worker-index.html",".DS_Store","favicon.png","fonts/helvetica-webfont.eot","fonts/helvetica-webfont.ttf","fonts/helvetica-webfont.woff","fonts/slkscr.ttf","fonts/slkscrb.ttf","fonts/slkscre.ttf","fonts/slkscreb.ttf","fonts/uni0553-webfont.eot","fonts/uni0553-webfont.ttf","fonts/uni0553-webfont.woff","global.css","logo-192.png","logo-512.png","manifest.json","silhouette.svg","spinner.svg","successkid.jpg"]),s=new Set(n);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(n))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const n of e)n!==t&&await caches.delete(n);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const n=new URL(t.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&s.has(n.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open(`offline${e}`).then((async e=>{try{const n=await fetch(t.request);return e.put(t.request,n.clone()),n}catch(n){const s=await e.match(t.request);if(s)return s;throw n}})))))}))}();
